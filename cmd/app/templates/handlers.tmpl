{{ define "handlers.go" }}package ui

import (
	"net/http"

	"{{ .Module }}/internal/app/config"

	"github.com/andygeiss/cloud-native-utils/security"
	"github.com/andygeiss/cloud-native-utils/templating"
)

// View defines an HTTP handler function for rendering a template with data.
func View(engine *templating.Engine, name string, data any) http.HandlerFunc {
	return func(w http.ResponseWriter, r *http.Request) {
		engine.Render(w, name, data)
	}
}

// ViewIndex defines an HTTP handler function for rendering the index template.
func ViewIndex(cfg *config.Config, engine *templating.Engine, serverSessions *security.ServerSessions) http.HandlerFunc {
	return func(w http.ResponseWriter, r *http.Request) {
	    // Initialize the view data.
		data := &struct {
			SessionID string
		}{
			SessionID: r.URL.Query().Get("session_id"),
		}

		// Render the template using the provided engine and data.
		View(engine, "index", data)(w, r)
	}
}

{{ end }}
